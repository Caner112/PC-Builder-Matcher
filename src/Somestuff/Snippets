======================================	
No idea what this does, but old code.
	
	private CPU extractDataFromCpuNode(GraphDatabaseService db, ArrayList n){
		CPU cpu = new CPU();
		int randomNumber = (int) Math.floor(Math.random()*20);
		Transaction tx =  db.beginTx();
		try{
			NodeProxy ramNode = (NodeProxy) n.get(randomNumber);
			cpu.setEan(ramNode.getProperty("EAN").toString());
			cpu.setIsEmpty(false);
			cpu.setIsMatched(true);
			tx.success();
		}catch(Exception e){
			cpu.setIsEmpty(true);
			cpu.setIsMatched(false);
		}finally {tx.close();} 
		
		return cpu;
	}
	private Memory extractDataFromMemoryNode(GraphDatabaseService db, ArrayList n){
		Memory ram = new Memory();
		int randomNumber = (int) Math.floor(Math.random()*20);
		Transaction tx =  db.beginTx();
		try{
			NodeProxy ramNode = (NodeProxy) n.get(randomNumber);
			ram.setEan(ramNode.getProperty("EAN").toString());
			ram.setIsEmpty(false);
			ram.setIsMatched(true);
			tx.success();
		} catch(Exception e){
			ram.setIsEmpty(true);
			ram.setIsMatched(false);
		}finally{tx.close();} 
		
		return ram;
	}
}	

=======================================================